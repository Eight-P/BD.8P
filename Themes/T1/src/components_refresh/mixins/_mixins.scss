@use "sass:map";
@use "sass:string";
@use "sass:list";

@import 'variables' ;
// @forward 'variables' ;

// -- Mixins & Variables (to be reworked later)

// -> Mixins
// Scrollbar design | @include scrollbar();
@mixin scrollbar ($width:13px, $borderR: 7px) {

  @if $width == none {
    &::-webkit-scrollbar { display: none }
  }
  @else {
    &::-webkit-scrollbar { 
      width: $width ;
    }
    
    &::-webkit-scrollbar-thumb {
      border: 2px solid transparent ;
      border-radius: $borderR ;
      background-color: var(--scrollbar-thumb);
      background-clip: padding-box ;
      visibility: visible ;
    }
  
    &::-webkit-scrollbar-track { 
      background-color: transparent ;
    }
  
    &:hover::-webkit-scrollbar-thumb {
      background-color: var(--scrollbar-thumb-hover);
    }
  }
}

// Shadow effects | @include shadowEffect("drop_1");
@mixin shadowEffect ($type:"drop_1") {
  $Map: (
    "drop_1": append("filter", "drop-shadow(3px 3px 3px rgba(0, 0, 0, 0.75))"),
    "drop_2": append("filter", "drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.5))"),

    "box_1": append("box-shadow", "4px 4px 10px rgba(0, 0, 0, 0.75)"),
    "box_2": append("box-shadow", "1px 1px 3px rgba(0, 0, 0, 0.75)"),
    "box_3": append("box-shadow", "1px 1px 3px rgba(0, 0, 0, 0.4)"),

    "server_1": append("filter", "drop-shadow( 2px 2px 3px black)"),
    "server_2": append("filter", "drop-shadow( 1px 1px 2px black)"),

    "text_1": append("text-shadow", "1.5px 1.5px 3px rgba(0, 0, 0, 0.75)"),
    "text_2": append("text-shadow", "1px 1px 3px rgba(0, 0, 0, 0.5)"),

    "card_1": append("box-shadow", "2px 2px 10px rgba(0, 0, 0, 0.4)")
  );

  $shadow: map.get($Map, $type);

  #{list.nth($shadow, 1)}: #{list.nth($shadow, 2)};
}

// Scroller fade out effect | @include scrollerFadeOut();
@mixin scrollerFadeOut ($top:5px, $bottom:5px) {

  $LG: to bottom, transparent, #000 $top, #000 calc(100% - $bottom), transparent;
  -webkit-mask-image: linear-gradient($LG);
}

// Set width and height restrictions | @include restrictions();
@mixin restrictions ($width:0px, $height:false) {
  min-width: $width ;
  max-width: $width ;
  min-height: if($height, $height, $width);
  max-height: if($height, $height, $width);
}

// Searchbar @include searchbar(".inner");
@mixin searchbar ($inner, $flat:false) {
  border: none ;

  @if ($flat) {
    background: none ;
    border-radius: 0 ;

    #{$inner} {
      // border: solid var(--header-secondary);
      // border-width: 0 0 1px 0 ;
      border-bottom: 1px solid var(--interactive-normal);
      // border-radius: 0 ;
      outline: none ;
      box-shadow: none !important ;
    }
  }
  @else {
    background: var(--background-modifier-accent);

    // input + icon parent
    #{$inner} {
      border: solid transparent ;
      border-width: 0 0 1px 0 ;
      background: none ;
      box-shadow: none !important ;
      outline: none ;
    }

    &:focus-within {
      background: none ;
      border-radius: 0 ;

      #{$inner} {
        border-color: var(--header-secondary);
        border-radius: 0 ;
        outline: none ;
      }
    }
  }
}

// Seperator line  @include divider(top);
@mixin divider ($l...) {
  $width: 1px ;
  $style: solid ;
  $color: var(--background-modifier-accent);

  border-width: 0 ;
  border-radius: 0 ;

  @if length($l) == 0 {
    @warn "divider() requires border location" ;
  }
  @else if length($l) == 1 {
    border-#{$l}: $width $style $color ;
  }
  @else { 
    border-color: $color ;
    border-style: $style ;

    @each $d in $l {
      border-#{$d}-width: $width ;
    }
  }
}
// <- Mixins

// -> User settings
:root {
  
  // will be reworked later

  --Main_Background: url("https://eight-p.github.io/BD.8P/Themes/T1/imports/Main-bg.jpg");
  --background_app: var(--Main_Background);

  --Main_Brightness: 80 ;
  --backgroundBrightness_app: var(--Main_Brightness);

  --Main_Background_blur: 0 ;
  --backgroundBlur_app: var(--Main_Background_blur);

  
  --Server_Background: url("https://eight-p.github.io/BD.8P/Themes/T1/imports/Server-bg.jpg");
  --background_server: var(--Server_Background);

  --Server_Brightness: 100 ;
  --backgroundBrightness_server: var(--Server_Brightness);

  --Server_Background_blur: 0 ;
  --backgroundBlur_server: var(--Server_Background_blur);

  
  --show-nitro-btn: 0 ;
  // --chatBtn_nitro: flex ;

  --show-gif-btn: 1 ;
  // --chatBtn_gif: flex ;

  --show-sticker-btn: 1 ;
  // --chatBtn_sticker: flex ;

  --show-emoji-btn: 1 ;
  // --chatBtn_emoji: flex ;

  --show-apps-btn: 1 ;
  // --chatBtn_Apps: block ;
  

  --show-userProfile-effects: 1 ;
  // --userProfileEffects: block ;

  --show-avatarDecorations: 1 ;
  // --avatarDecorations: block ;


  --unmask-links: 0 ;
  // --unmaskedLinks: inline-flex ;

  --show-serverboost-stats: 1 ;
  // --serverBoostStatus: flex ;

  --always-show-voicecontrols: 0 ;
  --voiceControlOverlay: var(--always-show-voicecontrols);

  --Font: "gg sans", "Noto Sans", "Helvetica Neue", Helvetica, Arial, sans-serif ;
  --font: var(--Font);

  
  // Discord vars
  --font-primary: var(--font) !important ;
  --font-display: var(--font) !important ;


  // new

  // 0 = hide | 1 = show | 2 = hide empty
  --friendsActivity: 1 ;

  // 0 = hidden | 1 = visible
  --sidebarScrollbar: 0 ;
  --membersListScrollbar: 0 ;

  // 0 = old | 1 = new
  --serverBarFolderStyle: 1 ;

  // Message buttons
  // 0: Reduced until hovered
  // 1: Show all (default)
  --messageBtns: 1 ;

  // Emojis in message buttons
  // 0: Hidden
  // 1: Show on hover
  // 2: Show (default)
  --emojiMsgBtns: 2 ;
}
// <- User settings
