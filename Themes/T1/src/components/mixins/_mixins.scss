@use "sass:map";
@use "sass:string";
@use "sass:list";

@import 'userVars' ;
@import 'userVarsComp' ;
@import 'colors' ;

// -- Mixins & Variables (to be reworked later)

// -> Mixins
// Scrollbar design | @include scrollbar();
@mixin scrollbar ($width:13px, $borderR: 7px) {

  @if $width == none {
    &::-webkit-scrollbar { display: none }
  }
  @else {
    &::-webkit-scrollbar {
      width: $width ;
    }

    &::-webkit-scrollbar-thumb {
      border: 2px solid transparent ;
      border-radius: $borderR ;
      background-color: var(--scrollbar-thumb);
      background-clip: padding-box ;
      visibility: visible ;
    }

    &::-webkit-scrollbar-track {
      background-color: transparent ;
    }

    &:hover::-webkit-scrollbar-thumb {
      background-color: var(--scrollbar-thumb-hover);
    }
  }
}

// Shadow effects | @include shadowEffect("box_1");
@mixin shadowEffect ($type:"drop_1") {
  $Map: (
    "drop_1": append("filter", "drop-shadow(3px 3px 3px rgba(0, 0, 0, 0.75))"),
    "drop_2": append("filter", "drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.5))"),

    "box_1": append("box-shadow", "4px 4px 10px rgba(0, 0, 0, 0.75)"),
    "box_2": append("box-shadow", "1px 1px 3px rgba(0, 0, 0, 0.75)"),
    "box_3": append("box-shadow", "1px 1px 3px rgba(0, 0, 0, 0.4)"),

    "server_1": append("filter", "drop-shadow( 2px 2px 3px black)"),
    "server_2": append("filter", "drop-shadow( 1px 1px 2px black)"),

    "text_1": append("text-shadow", "1.5px 1.5px 3px rgba(0, 0, 0, 0.75)"),
    "text_2": append("text-shadow", "1px 1px 3px rgba(0, 0, 0, 0.5)"),

    "card_1": append("box-shadow", "2px 2px 10px rgba(0, 0, 0, 0.4)")
  );

  $shadow: map.get($Map, $type);

  #{list.nth($shadow, 1)}: #{list.nth($shadow, 2)};
}

// Scroller fade out effect | @include scrollerFadeOut();
@mixin scrollerFadeOut ($top:5px, $bottom:5px) {

  $LG: to bottom, transparent, #000 $top, #000 calc(100% - $bottom), transparent;
  -webkit-mask-image: linear-gradient($LG);
}

// Set width and height restrictions | @include restrictions();
@mixin restrictions ($width:0px, $height:false) {
  min-width: $width ;
  max-width: $width ;
  min-height: if($height, $height, $width);
  max-height: if($height, $height, $width);
}

// Searchbar @include searchbar(".inner");
@mixin searchbar ($inner, $flat:false) {
  border: none ;

  @if ($flat) {
    background: none ;
    border-radius: 0 ;

    #{$inner} {
      border: none ;
      background: none !important ;
      border-bottom: 1px solid var(--interactive-normal);
      outline: none ;
      box-shadow: none !important ;
      border-radius: 0 ;

      &:focus-within {
        border-color: var(--header-secondary); ;
      }
    }
  }
  @else {
    background: var(--background-modifier-accent);

    // input + icon parent
    #{$inner} {
      border: solid transparent ;
      border-width: 0 0 1px 0 ;
      background: none !important ;
      box-shadow: none !important ;
      outline: none ;
    }

    &:focus-within {
      background: none ;
      border-radius: 0 ;

      #{$inner} {
        border-color: var(--header-secondary);
        border-radius: 0 ;
        outline: none ;
      }
    }
  }
}

// Separator line
//  @include divider(top);
//  @include divider(bottom, ("color": red));
//  @include divider( (top, bottom), ("color": red) );
@mixin divider ($l, $c:false) {
  $width: 1px ;
  $style: solid ;
  $color: var(--background-modifier-accent);

  @if $c {
    $C_width: map.get($c, "width");
    $C_style: map.get($c, "style");
    $C_color: map.get($c, "color");

    @if $C_width { $width: $C_width }
    @if $C_style { $style: $C_style }
    @if $C_color { $color: $C_color }
  }

  $valid-sides: top, bottom, left, right ;

  @if length($l) == 0 {
    @warn "divider() expects border side" ;
  }
  @else {
    border-width: 0 ;
    border-radius: 0 ;
    border-color: $color ;
    border-style: $style ;

    @each $side in $l {

      @if list.index($valid-sides, $side) {
        border-#{$side}-width: $width ;
      }
      @else {
        @warn "invalid border side: #{$side}" ;
      }
    }
  }
}
// <- Mixins
